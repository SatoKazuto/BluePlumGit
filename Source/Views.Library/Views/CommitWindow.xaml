<Window x:Class="BluePlumGit.Views.CommitWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:vm="clr-namespace:BluePlumGit.ViewModels;assembly=ViewModels.Library"
        xmlns:behavior="clr-namespace:BluePlumGit.Behaviors"
        xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
        xmlns:themes="clr-namespace:DataGridThemes;assembly=DataGridThemes"
        xmlns:my="http://schemas.microsoft.com/netfx/2007/xaml/presentation"
        WindowStartupLocation="CenterOwner"
        Title="コミット" Height="350" Width="525">

    <Window.DataContext>
        <vm:CommitWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのLoadedイベントのタイミングでViewModelのLoadedメソッドが呼ばれます-->
        <i:EventTrigger>
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Loaded" />
        </i:EventTrigger>
        <!--<i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding Commands.Loaded, Mode=OneWay}" />
        </i:EventTrigger>-->
        <l:InteractionMessageTrigger MessageKey="WindowControl" Messenger="{Binding Messenger, Mode=OneWay}">
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <i:Interaction.Behaviors>
        <behavior:WindowStyleFlagBehavior MaximizeBox="False" MinimizeBox="False" />
    </i:Interaction.Behaviors>

    <Window.Resources>
        <Style x:Key="SingleClickEditing" TargetType="{x:Type my:DataGridCell}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"></EventSetter>
        </Style>
    </Window.Resources>
    
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <StackPanel Margin="0"
                    Orientation="Horizontal" HorizontalAlignment="Left">
                <Button Content="全選択" Height="23" Width="75" Margin="0,0,5,0"
            			Command="{Binding Commands.AllSelectButton, Mode=OneWay}"/>
                <Button Content="全解除" Height="23" Width="75"
               			Command="{Binding Commands.AllReleaseButton, Mode=OneWay}"/>
            </StackPanel>
        </Grid>
        <Border Grid.Row="1" Margin="0,0,0,5" BorderBrush="#FF00FDFF">
            <TextBox Text="{Binding Path=Propertys.CommitMessage, Mode=TwoWay}" />
        </Border>
        <controls:DataGrid Grid.Row="2" ItemsSource="{Binding Propertys.Diffs, Mode=TwoWay}"
                          AutoGenerateColumns="False"
                          SelectionMode="Extended"
                          themes:DataGridHelper.HorizontalMouseWheelScrollingEnabled="True"
                          themes:DataGridHelper.SelectedCells="{Binding Path=myViewModelSourceList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch">
            <controls:DataGrid.Columns>
                <DataGridCheckBoxColumn IsReadOnly="False" Header="" Binding="{Binding Check}" Width="30" CellStyle="{StaticResource SingleClickEditing}"/>
                <DataGridTextColumn IsReadOnly="True" Header="ファイル名称" Binding="{Binding Filename}" Width="200" />
                <DataGridTextColumn IsReadOnly="True" Header="変更前名称" Binding="{Binding Oldname}" Width="100" />
                <DataGridTextColumn IsReadOnly="True" Header="変更内容" Binding="{Binding ChangeTypeName}" Width="100" />
            </controls:DataGrid.Columns>
        </controls:DataGrid>
        <Grid Grid.Row="3">
            <StackPanel Margin="0"
                    Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Commit" Height="23" Width="75" Margin="0,0,5,0"
            			Command="{Binding Commands.CommitButton, Mode=OneWay}"/>
                <Button Content="Cancel" Height="23" Width="75"
               			Command="{Binding Commands.CancelButton, Mode=OneWay}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
